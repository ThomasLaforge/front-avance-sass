@use 'mixins';
@use 'sass:math';
@import 'variables';

$carteWidth: 80px;
$carteHeight: $carteWidth * 1.5;
$centerColorSize: math.div($carteWidth, 3);
$insideSpace: 5px;
$borderColor: black;
$identifiantFontSize: math.div($carteHeight, 10);
$identifiantHeight: $identifiantFontSize * 2;

.carte {
    @include mixins.flex(column, center);
    align-items: center;
    width: $carteWidth;
    height: $carteHeight;
    background: white;
    @include mixins.border(1px, solid, $borderColor, 8px);    

    .carte-inside {
        @include mixins.flex(column, space-between);
        height: $carteHeight - $insideSpace * 2;
        width: $carteWidth - $insideSpace * 2;
        padding: $insideSpace;
        @include mixins.border(1px, solid, $borderColor, 8px);    

        .carte-identifiant {
            @include mixins.flex(column, space-between);
            align-items: center;
            text-align: center;
            font-size: $identifiantFontSize;
            height: $identifiantHeight;
        }
    
        .carte-top {
            @include mixins.flex(row, flex-start);
        }
        
        .carte-middle {
            text-align: center;
    
            .carte-color {
                font-size: $centerColorSize;
            }
        }
    
        .carte-bottom {
            @include mixins.flex(row, flex-end);
    
            .carte-identifiant {
                rotate: 180deg;
            }
        }
    }
}

// Exo 6
.pile-cartes {
    $nbCartes: 5;

    @for $i from 1 through $nbCartes {
        .carte-#{$i} {
            position: absolute;
            top: ($i - 1) * ($identifiantHeight + $insideSpace * 3);
        }
    }
}

// Exo 7
.main-cartes {
    $nbCartes: 6;
    $angleByCard: 15deg;
    $initialAngle: math.div($nbCartes, 2) * $angleByCard * -1;

    @for $i from 1 through $nbCartes {
        .carte-#{$i} {
            position: absolute;
            left: $i * math.div($carteWidth, 3);
            @if $i < math.div($nbCartes, 2) {
                top: math.div($carteHeight, 10) * ($nbCartes - $i);
            } @else {
                top: math.div($carteHeight, 10) * $i;
            }
            rotate: $initialAngle + ($i  * $angleByCard);
        }
    }
}

// Exo 8
.defausse-cartes {
    $nbCartes: 3;
    
    @for $i from 1 through $nbCartes {
        .carte-#{$i} {
            position: absolute;
            top: math.random(math.div($tapisHeight, 1px)) * 1px;
            left: math.random(math.div($tapisWidth, 1px)) * 1px;
            rotate: math.random(360) * 1deg;
        }
    }
}